[{"authors":["admin"],"categories":null,"content":"I am a PhD Student at the Clinical Bioinformatics in the Institut Imagine (Paris). My current work focus on the development of new tools for the interpretation of variants in rare diseases.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am a PhD Student at the Clinical Bioinformatics in the Institut Imagine (Paris). My current work focus on the development of new tools for the interpretation of variants in rare diseases.","tags":null,"title":"Francisco Requena","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":["R","open data","networks"],"content":"\rIntroduction\rRecently, I started to read this free accessible book written by Albert-László Barabási. In the Chapter 4 of his book, it depicts the USA airport networks to represent scale-free networks. I was wondering if we can get a world picture, creating the same network but including the global routes using open data from internet.\n\r1. What is a scale-free network?\rScale-free networks are characterized by a large number of nodes with low degree (number of links) and very few hubs with a high degree. If we represent the distribution of degrees of these nodes, it follows a power-law distribution. To illustrate this idea, let’s create a quick example:\n# Load libraries\rlibrary(tidygraph) library(ggraph)\rlibrary(igraph)\rlibrary(stringr)\rlibrary(tidyverse)\rlibrary(patchwork)\rlibrary(ggthemes)\r# 1. Example showing a scale-free network\rscale_free_net \u0026lt;- play_barabasi_albert(n = 1000, power = 1)\r# 1.1 Scale-free network\rp1 \u0026lt;- ggraph(scale_free_net, layout = \u0026#39;kk\u0026#39;) + geom_edge_link(alpha = 0.3) + geom_node_point(fill = \u0026#39;steelblue\u0026#39;, color = \u0026#39;black\u0026#39;, shape = 21) +\rggtitle(\u0026#39;Scale-free network\u0026#39;) + theme_graph()\rvector_values \u0026lt;- degree_distribution(scale_free_net)[-1] # Eliminate first element, it represents zero degree vertices\rdf \u0026lt;- data.frame(frequency = vector_values,\rdegrees = seq(1, length(vector_values),1))\r# 1.2 Degree distribution\rp2 \u0026lt;- ggplot(df, aes(degrees, frequency)) +\rgeom_col(fill = \u0026#39;steelblue\u0026#39;, color = \u0026#39;black\u0026#39;) +\rggtitle(\u0026#39;Degree Distribution of a scale-free network\u0026#39;) +\rylab(\u0026#39;Relative frequency\u0026#39;) +\rxlab(\u0026#39;Number of links\u0026#39;) +\rtheme_bw()\rp1 + p2\rMany real networks share this feature. For instance, if we take a look how internet is organized and calculate the number of links that every site has, we find that the most of websites (nodes) have a low number of links (edges) and very few will have a large number of links (e.g. Google, Facebook…). Other examples are social, co-authorship or protein-protein network.\nWe hope to see the same pattern through our airport’s network: very few airports have a large number of routes while the most will have few routes.\n\r2. Data (airports and routes)\rAt the beginning, we talked about creating our own network of airlines routes. To achieve this, we download our data from Openflights whose have a lot of information about flights. We will just download data about airports (selecting: code, longitude and latitude) and routes (selecting: name, code source, code destination and continent location). Besides, we will clean those observations with NA’s values or wrong strings.\nImportant: Aiports will be the nodes of our network and the routes will conform the edges between the nodes.\n# Data with routes\r# https://openflights.org/data.html#route\rdf \u0026lt;- read.csv(\u0026#39;https://raw.githubusercontent.com/jpatokal/openflights/master/data/routes.dat\u0026#39;,header = FALSE,\rstringsAsFactors = FALSE,\rcol.names = c(\u0026#39;airline\u0026#39;, \u0026#39;airline_id\u0026#39;, \u0026#39;src\u0026#39;, \u0026#39;src_id\u0026#39;, \u0026#39;dest\u0026#39;, \u0026#39;dest_id\u0026#39;, \u0026#39;codeshare\u0026#39;,\u0026#39;stops\u0026#39;, \u0026#39;equip\u0026#39;))[,c(3,5)]\r# Data with airport information\r# https://openflights.org/data.html#airport\rdf2 \u0026lt;- read.csv(\u0026#39;https://raw.githubusercontent.com/jpatokal/openflights/master/data/airports.dat\u0026#39;,header = FALSE,\rstringsAsFactors = FALSE)[,c(2,5,7,8,12)]\rcolnames(df2) \u0026lt;- c(\u0026#39;name\u0026#39;,\u0026#39;code\u0026#39;, \u0026#39;lat\u0026#39;, \u0026#39;long\u0026#39;, \u0026#39;location\u0026#39;)\r# Clean data\rdf_airport \u0026lt;- df2 %\u0026gt;% filter(!str_detect(code, fixed(\u0026quot;\\\\N\u0026quot;))) %\u0026gt;%\rfilter(!str_detect(location, fixed(\u0026quot;\\\\N\u0026quot;))) %\u0026gt;%\ras_tibble()\rtmp_loc \u0026lt;- str_split(df_airport$location, \u0026#39;/\u0026#39;)\rdf_airport$location \u0026lt;- map_chr(tmp_loc, function(x) x[[1]])\rdf_airport \u0026lt;- df_airport %\u0026gt;% mutate(location = as.factor(location))\rdf_routes \u0026lt;- df %\u0026gt;% filter(!str_detect(src, fixed(\u0026quot;\\\\N\u0026quot;)) \u0026amp; !str_detect(dest, fixed(\u0026quot;\\\\N\u0026quot;))) %\u0026gt;%\rfilter(!src == dest) %\u0026gt;%\rgroup_by(src, dest) %\u0026gt;%\rcount() %\u0026gt;%\rarrange(desc(n)) %\u0026gt;%\rungroup() %\u0026gt;%\ras_tibble()\r\r3. Airport Network visualization\rTo make possible the downstream analysis, we have to transform the observations of our dataframe into nodes and edges (tbl_graph object). We can do this thanks to the package ggraph. Once we do this, we will be able to visualise the network applying different algorithms layers and calculate topological parameters of the nodes that otherwise would not be possible.\nFor instance, we can choose the ‘mds’ layout (you can find many other layouts described here). This algorithm layout measures the shortest path between each node and display together those nodes which are closer in the network. Besides, we are going to calculate some scores per node and to make faster the algorithm, I will eliminate those airports whose number of routes are low.\n# Convert dataframe (df_routes) to tbl_graph object (df_graph)\rdf_graph \u0026lt;- as_tbl_graph(df_routes,directed = FALSE) %\u0026gt;% activate(edges) %\u0026gt;%\rfilter(!edge_is_multiple()) %\u0026gt;% activate(nodes) %\u0026gt;%\rmutate(n_degree = centrality_degree(),\rbetweenness = centrality_betweenness(),\rcommunity = group_walktrap(),\rn_triangles = local_triangles(),\rclust = local_transitivity()) %\u0026gt;%\rleft_join(df_airport, by = c(\u0026#39;name\u0026#39; = \u0026#39;code\u0026#39;)) %\u0026gt;%\rfilter(!is.na(lat) \u0026amp; !is.na(long))\r# ggraph(df_graph %\u0026gt;% activate(nodes) %\u0026gt;% filter(n_degree \u0026gt;= 10), layout = \u0026quot;mds\u0026quot;) + # geom_edge_link(aes(edge_width = n), alpha = 0.1, edge_colour = \u0026#39;gray\u0026#39;) + # geom_node_point(aes(size = n_degree, fill = location), shape = 21) +\r# scale_fill_brewer(palette = \u0026#39;Set1\u0026#39;) +\r# scale_size(range = c(0, 14)) +\r# theme_graph() +\r# guides(size=FALSE, edge_width = FALSE, fill = guide_legend(override.aes = list(size = 7))) +\r# ggtitle(\u0026#39;Airports network\u0026#39;)\rBesides, we plot the degree distribution of our network using ggplot2. For that, we convert our tbl_graph to a dataframe (the reverse step we did before) applying the function activation(nodes) and then as_tibble().\n# Degree distribution\rdf_nodes \u0026lt;- df_graph %\u0026gt;% activate(nodes) %\u0026gt;% as_tibble()\rggplot(df_nodes, aes(n_degree)) +\rgeom_histogram(fill = \u0026#39;steelblue\u0026#39;, color = \u0026#39;black\u0026#39;, binwidth = 1) +\rggtitle(\u0026#39;Degree Distribution of airports network\u0026#39;) +\rylab(\u0026#39;Frequency\u0026#39;) +\rxlab(\u0026#39;Number of links\u0026#39;) +\rtheme_bw()\rAs we saw at the beginning, both networks follow a power-law distribution.\n\r4. Where is my airport?\rAt first glance, let’s take a look at the distribution of the airports around the world based on their region:\nworldmap \u0026lt;- borders(\u0026quot;world\u0026quot;, colour=\u0026quot;#efede1\u0026quot;, fill=\u0026quot;#efede1\u0026quot;) # Get airports by degree\rggplot(df_airport, aes(long, lat)) + worldmap + geom_point(aes(fill = location), color = \u0026#39;black\u0026#39;, shape = 21) +\rtheme_void() +\rguides(fill = guide_legend(override.aes = list(size = 7))) +\rggtitle(\u0026#39; Aiports across the world by region\u0026#39;)\rWe can see the biggest hubs are influenced by the economical situation and the population density of the region.\n\rWhat are the best connected airports?\rp1 \u0026lt;- ggplot(df_nodes %\u0026gt;% filter(n_degree \u0026gt;= 50), aes(long, lat)) + worldmap + geom_point(aes(size = n_degree, fill = n_degree), pch = 21) +\rscale_fill_viridis_c() +\rtheme_void() +\rscale_size_continuous(range = c(1,10))\rp2 \u0026lt;- ggplot(df_nodes %\u0026gt;% top_n(20, n_degree), aes(reorder(name, -n_degree), n_degree)) +\rgeom_col(aes(fill = n_degree), color = \u0026#39;black\u0026#39;) +\rscale_fill_viridis() +\rggtitle(\u0026#39;Top 20 airport by number of routes\u0026#39;) +\rylab(\u0026#39;Nº of routes\u0026#39;) +\rxlab(\u0026#39;Code Airport\u0026#39;) +\rtheme_bw() +\rtheme(axis.text.x = element_text(angle = 90, hjust = 1),\rtext = element_text(size=20))\rp3 \u0026lt;- ggplot(df_nodes %\u0026gt;% group_by(location) %\u0026gt;% top_n(10, n_degree), aes(reorder(name, -n_degree), n_degree)) +\rgeom_col(aes(fill = n_degree), color = \u0026#39;black\u0026#39;) +\rscale_fill_viridis() +\rggtitle(\u0026#39;Top 10 airport by number of routes and region\u0026#39;) +\rylab(\u0026#39;Nº of routes\u0026#39;) +\rxlab(\u0026#39;Code Airport\u0026#39;) +\rfacet_wrap(~ location, scales = \u0026#39;free_x\u0026#39;) +\rtheme_bw() +\rguides(fill = FALSE) +\rtheme(axis.text.x = element_text(angle = 90, hjust = 1),\rtext = element_text(size=20))\rp1 + p2 + plot_layout(ncol = 1, heights = c(3, 1))\rp3\rWhat is the longest path possible?\rCan you guess how many steps would be required to travel the longest path possible between two airports? This number is called diameter and can be calculated easily:\ndf_graph %\u0026gt;% activate(nodes) %\u0026gt;% mutate(diam = graph_diameter()) %\u0026gt;% distinct(diam) %\u0026gt;% as_tibble()\r## # A tibble: 1 x 1\r## diam\r## \u0026lt;dbl\u0026gt;\r## 1 12\rThe longest path is 12 steps. Not so long if we take into account the remote distance of some of the airports (Siberia, Greenland, Pacific regions…).\n\rWhat is the shortest path between two airports?\rWe can select an airport and calculate the shortest path needed to reach another one. For instance, the Charles de Gaulle Airport (Paris) is one step from Adolfo Suárez Madrid–Barajas (Madrid), but what is the number of steps needed to reach the Hawai’s airport from Paris? Let’s calculate it:\nshortest_paths(df_graph, \u0026#39;CDG\u0026#39;, \u0026#39;HNL\u0026#39;)$vpath[[1]]\r## + 3/3209 vertices, named, from 802f930:\r## [1] CDG ORD HNL\rThe shortest path from Paris to Honolulu is: Paris -\u0026gt; Chicago -\u0026gt; Honolulu.\nNow, imagine that we calculate all the shortest paths between Paris and the rest of airports and we repeat it with every airport and calculate the average. This value is called: average shortest path and is average number of minimum connections required from any airport to any other airport.\ndf_graph %\u0026gt;% activate(nodes) %\u0026gt;% mutate(dist = graph_mean_dist()) %\u0026gt;% distinct(dist) %\u0026gt;% as_tibble()\r## # A tibble: 1 x 1\r## dist\r## \u0026lt;dbl\u0026gt;\r## 1 3.97\rThe average shortesth path is 3.94, almost 4 steps on average to go from an airport to any other.\n\rWhat is the longest distance possible from a specific airport?\rWe are in Paris again, and we want to go to the most distant airport possible (in steps). This value is called eccentricity and is specific for each airport. Let’s take a look at three of the most connected airports:\ndf_graph_eccen \u0026lt;- df_graph %\u0026gt;% activate(nodes) %\u0026gt;% mutate(eccentricity = node_eccentricity()) %\u0026gt;% as_tibble()\rdf_graph_eccen %\u0026gt;% filter(name == \u0026#39;ATL\u0026#39; | name == \u0026#39;CDG\u0026#39; | name == \u0026#39;AMS\u0026#39;) %\u0026gt;% select(name.y, eccentricity )\r## # A tibble: 3 x 2\r## name.y eccentricity\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Hartsfield Jackson Atlanta International Airport 7\r## 2 Charles de Gaulle International Airport 7\r## 3 Amsterdam Airport Schiphol 7\rWe would need 7 steps to go from Paris to the most distant airport, the same value obtained with Atlanta and Amsterdam airports. This make sense as we have selected nodes with the highest nº of routes. But the value 7 is the lowest that we can get?\nLet’s see the distribution:\n# The filter(eccentricity \u0026gt; 2) eliminate those airports that are disconnected from the main network and have a eccentricity from 0 to 2\rggplot(df_graph_eccen %\u0026gt;% filter(eccentricity \u0026gt; 2), aes(eccentricity)) +\rgeom_histogram(fill = \u0026#39;steelblue\u0026#39;, color = \u0026#39;black\u0026#39;) +\rylab(\u0026#39;Nº of airports\u0026#39;) +\rtheme(text = element_text(size=20))\rAs we see above, most of the airports are located between 8 and 9. Those airports with the highest number of routes have a value of 7. But there is an airport whose value is 6.\n df_graph_eccen %\u0026gt;% filter(eccentricity == 6)\r## # A tibble: 1 x 11\r## name n_degree betweenness community n_triangles clust name.y lat long\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 YYZ 147 249941. 1 2061 0.192 Leste~ 43.7 -79.6\r## # ... with 2 more variables: location \u0026lt;fct\u0026gt;, eccentricity \u0026lt;dbl\u0026gt;\rWell, it is interesting that the airport with the lowest eccentricity is Lester B. Pearson International Airport located at Toronto. Its number of routes (n_degree) is not very high but has an important particularity. If we see the map, Canada is a country with a large number of airports sparse along the territory. While the majority of airports have to “spend” steps to reach those distant airport (mainly at the north of the territory), this airport is very close to them and at the same time is close to the rest of airports across the world (USA, Europe, China…)\n\rWhere are the hubs?\rWe can detect also the most relevant hubs (densely connected subgraphs) and display those airports that belongs to one of the top 10 hubs:\nggplot(df_nodes %\u0026gt;% filter(community \u0026lt;= 10), aes(long, lat)) + worldmap + geom_point(aes(fill = as.factor(community)), color = \u0026#39;black\u0026#39;, shape = 21) +\rtheme_void() +\rscale_fill_brewer(palette = \u0026#39;Paired\u0026#39;) +\rguides(fill = guide_legend(override.aes = list(size = 12))) +\rggtitle(\u0026#39; Aiports across the world by region\u0026#39;) +\rlabs(fill=\u0026quot;List of Hubs\u0026quot;) +\rtheme_map()\rWe have applied a walktrap community finding algorithm that uses random walks between the nodes and group those airports that are connected by short random walks.\nIf you take a look at the map, these hubs represent not only a group of airports densely connected but also political and economical hubs. For instance, a hub includes Ex-soviets states, another Europe, Canary Islands and some cities from Magreb.\nIn addition, we can classify the airports in 3 categories:\n\rCore: Those aiports whose have the highest number of triangles (subgraph of 3 nodes and 3 edges). If an airport is located in many triangles, we consider it as a well connected airport.\rPeryphery: Airports that are located in distant regions with few routes.\rBridge: Those airports that allow the communication between the airports that form the core and the periphery.\r\rdf_nodes \u0026lt;- df_nodes %\u0026gt;% mutate(category = \u0026#39;Bridge\u0026#39;)\rdf_nodes$category \u0026lt;- ifelse(df_nodes$n_triangles \u0026gt; 400, \u0026#39;Core\u0026#39;, df_nodes$category)\rdf_nodes$category \u0026lt;- ifelse(df_nodes$clust == 0, \u0026#39;Periphery\u0026#39;, df_nodes$category)\rggplot(df_nodes, aes(long, lat)) + worldmap +\rgeom_point(aes(fill = category), color = \u0026#39;black\u0026#39;, shape = 21) +\rfacet_grid(category ~.) +\rtheme_map() +\rtheme(strip.text = element_text(size=25)) +\rguides(fill = guide_legend(override.aes = list(size = 20)))\r\r\r5. Which are the best connected airports?\rThere are different ways to measure the connectivity of a node in a network. One of the most used is the betweenness centrality which is the sum of the shortest paths that pass through a node:\np1 \u0026lt;- ggplot(df_nodes %\u0026gt;% filter(n_degree \u0026gt;= 20), aes(long, lat)) + worldmap + geom_point(aes(size = betweenness, fill = betweenness), pch = 21) +\rscale_fill_viridis_c() +\rtheme_void() +\rscale_size_continuous(range = c(1,10))\rp2 \u0026lt;- ggplot(df_nodes %\u0026gt;% top_n(20, betweenness), aes(reorder(name, -betweenness), betweenness)) +\rgeom_col(aes(fill = betweenness), color = \u0026#39;black\u0026#39;) +\rscale_fill_viridis() +\rggtitle(\u0026#39;Top 20 airport by number of betweenness\u0026#39;) +\rylab(\u0026#39;Frequency\u0026#39;) +\rxlab(\u0026#39;Code Airport\u0026#39;) +\rtheme_bw() +\rtheme(axis.text.x = element_text(angle = 90, hjust = 1),\rtext = element_text(size=20))\rp3 \u0026lt;- ggplot(df_nodes %\u0026gt;% group_by(location) %\u0026gt;% top_n(10, betweenness), aes(reorder(name, -betweenness), betweenness)) +\rgeom_col(aes(fill = betweenness), color = \u0026#39;black\u0026#39;) +\rscale_fill_viridis() +\rggtitle(\u0026#39;Top 10 airport by number of betweenness and region\u0026#39;) +\rylab(\u0026#39;Frequency\u0026#39;) +\rxlab(\u0026#39;Code Airport\u0026#39;) +\rfacet_wrap(~ location, scales = \u0026#39;free_x\u0026#39;) +\rtheme_bw() +\rguides(fill = FALSE) +\rtheme(axis.text.x = element_text(angle = 90, hjust = 1),\rtext = element_text(size=20))\rp1 + p2 + plot_layout(ncol = 1, heights = c(3, 1))\rp3\rAs we see above, airports with with a high number of routes usually have a high betweenness. But we find an exception: the Ted Stevens Anchorage International Airport (ANL). Honestly, I did not expect this airport with the highest betweenness but if we take a look at the organization of the Alaska’s airports:\ndf_routes_def \u0026lt;- df_routes %\u0026gt;% left_join(df_airport, by = c(\u0026#39;src\u0026#39; = \u0026#39;code\u0026#39;)) %\u0026gt;%\rrename(long_src = long, lat_src = lat) %\u0026gt;%\rleft_join(df_airport, by = c(\u0026#39;dest\u0026#39; = \u0026#39;code\u0026#39;)) %\u0026gt;%\rrename(long_dest = long, lat_dest = lat) %\u0026gt;%\rleft_join(df_nodes, by = c(\u0026#39;src\u0026#39; = \u0026#39;name\u0026#39;)) %\u0026gt;%\rselect(-lat, -long)\rdf_routes_anc \u0026lt;- df_routes_def %\u0026gt;% filter( dest == \u0026#39;ANC\u0026#39;)\rggplot(df_routes_anc, aes(long_src, lat_src)) + worldmap +\rcoord_map(xlim=c(-180,180)) +\rgeom_segment(aes(x = long_src, y = lat_src,\rxend = long_dest, yend = lat_dest),\ralpha = 0.7, color = \u0026#39;steelblue\u0026#39;) +\rscale_fill_viridis_c() +\rtheme_map() +\rggtitle(\u0026#39;Ted Stevens Anchorage International Airport\u0026#39;) \rCrossing this airport is required to reach the rest of airports in Alaska. Therefore, this create a bottleneck where most of nodes have to cross this airport before reach the rest.\n7. Routes by number of airlines\rWe can take a look at those routes whose have the largest number of airlines:\nggplot(df_routes %\u0026gt;% top_n(20, n), aes(reorder(paste(src, dest, sep =\u0026#39; - \u0026#39;), -n), n)) +\rgeom_col(aes(fill = n), color = \u0026#39;black\u0026#39;) +\rscale_fill_viridis() +\rggtitle(\u0026#39;Top 20 routes by number of airlines\u0026#39;) +\rylab(\u0026#39;Frequency\u0026#39;) +\rxlab(\u0026#39;Route\u0026#39;) +\rtheme_bw() +\rguides(fill = FALSE) +\rtheme(axis.text.x = element_text(angle = 90, hjust = 1),\rtext = element_text(size=20))\r\r\r8. Connections between Madrid and Dubai\rWe can display all the connections between Madrid and Dubai.\ndf_routes_dubai \u0026lt;- df_routes_def %\u0026gt;% filter( src == \u0026#39;DXB\u0026#39; | dest == \u0026#39;DXB\u0026#39;)\rp1 \u0026lt;- ggplot(df_routes_dubai, aes(long_src, lat_src)) + worldmap +\rcoord_map(\u0026quot;gilbert\u0026quot;, xlim=c(-180,180)) +\rgeom_segment(aes(x = long_src, y = lat_src,\rxend = long_dest, yend = lat_dest),\ralpha = 0.3, color = \u0026#39;steelblue\u0026#39;) +\rscale_fill_viridis_c() +\rtheme_map() +\rggtitle(\u0026#39;Dubai International Airport connections\u0026#39;) p2 \u0026lt;- ggplot(df_routes_dubai %\u0026gt;% filter(src == \u0026#39;DXB\u0026#39;) %\u0026gt;% top_n(10, n) , aes(reorder(paste(src, dest, sep =\u0026#39; - \u0026#39;), -n), n)) +\rgeom_col(aes(fill = n), color = \u0026#39;black\u0026#39;) +\rscale_fill_viridis() +\rggtitle(\u0026#39;Top 10 routes by number of airlines\u0026#39;) +\rylab(\u0026#39;Frequency\u0026#39;) +\rxlab(\u0026#39;Route\u0026#39;) +\rtheme_bw() +\rguides(fill = FALSE) +\rtheme(axis.text.x = element_text(angle = 90, hjust = 1),\rtext = element_text(size=20))\rp1\rFALSE Warning: Removed 10 rows containing missing values (geom_segment).\rp2\r…or the routes between Madrid and the rest of the world:\ndf_routes_madrid \u0026lt;- df_routes_def %\u0026gt;% filter( src == \u0026#39;MAD\u0026#39; | dest == \u0026#39;MAD\u0026#39;)\rp1 \u0026lt;- ggplot(df_routes_madrid, aes(long_src, lat_src)) + worldmap +\rcoord_map(\u0026quot;gilbert\u0026quot;, xlim=c(-180,180)) +\rgeom_segment(aes(x = long_src, y = lat_src,\rxend = long_dest, yend = lat_dest),\ralpha = 0.3, color = \u0026#39;orange\u0026#39;) +\rscale_fill_viridis_c() +\rtheme_map() +\rggtitle(\u0026#39;Madrid Barajas International Airport connections\u0026#39;)\rp2 \u0026lt;- ggplot(df_routes_madrid %\u0026gt;% filter(src == \u0026#39;MAD\u0026#39;) %\u0026gt;% top_n(10, n) , aes(reorder(paste(src, dest, sep =\u0026#39; - \u0026#39;), -n), n)) +\rgeom_col(aes(fill = n), color = \u0026#39;black\u0026#39;) +\rscale_fill_viridis() +\rggtitle(\u0026#39;Top 10 routes by number of airlines\u0026#39;) +\rylab(\u0026#39;Frequency\u0026#39;) +\rxlab(\u0026#39;Route\u0026#39;) +\rtheme_bw() +\rguides(fill = FALSE) +\rtheme(axis.text.x = element_text(angle = 90, hjust = 1),\rtext = element_text(size=20))\rp1\rFALSE Warning: Removed 4 rows containing missing values (geom_segment).\rp2\rConclusion\rThe relevance of an airport in the network can be assessed through different metrics: nº of routes, nº of triangles, clustering, betweenness, eccentricity or shortest path. At the same time, the identification of groups of airports, we have clustered airports by continent, random walks algorithm, or using a blend of centrality measures filtering the nodes in three groups (core, bridge, peripherial).\nIn conclusion, network science allows us to improve our knowledge about data that can be converted into a network, through the use of multiple approaches.\n\rFinal notes\r\rTo simplify this post, I have not included the direction of the edges neither the real distance between airports.\n\rA very interesting point is the analysis of the resilence: what would happen if we delete a specific airport from the network? Would the impact be equal across the aiports?\n\r\r\r\r","date":1588291200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588291200,"objectID":"58be5bb2af776d957c30c60672ac015b","permalink":"/post/exploring-world-airline-network/","publishdate":"2020-05-01T00:00:00Z","relpermalink":"/post/exploring-world-airline-network/","section":"post","summary":"Introduction\rRecently, I started to read this free accessible book written by Albert-László Barabási. In the Chapter 4 of his book, it depicts the USA airport networks to represent scale-free networks.","tags":null,"title":"Exploring world flights using a network approach","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask\n Documentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":["R","machine learning"],"content":"\rRecently, I discovered a new website about competitions that it is not called Kaggle! Its name is Drivendata.\nDrivenData offers different competitions related with multiple types of field, such as health (oh yes!), ecology, society… with a common element: to face the world’s biggest social challenges.\nI decided to join my first competition called ‘DengAI: Predicting Disease Spread‘. In this case, the user receives a set of weather information (temperatures, precipitations, vegetations) from two cities: San Juan (Puerto Rico) and Iquitos (Peru) with total cases of dengue by year and week of every year.\nThe goal of the competition is to develop a prediction model that would be able to anticipate the cases of dengue in every city depending on a set of climate variables.\nThe DrivenData’s blog wrote some days ago, a post about a fast approach with this dataset. It was written in Python. So, I decided to “translate” to R language.\nThe next code is divided into three main points:\n1. Code with clean tasks (transform NA values, remove of columns…) and exploratory analyses.\n2. Function with every step during cleaning of data.\n3. Development of model, prediction and comparison of predicted vs real total cases detected.\n# Load of libraries\rlibrary(tidyverse)\rlibrary(zoo)\rlibrary(corrplot)\rlibrary(MASS)\rlibrary(reshape2)\r# Load data\rtrain_features \u0026lt;- read.csv(\u0026#39;data/dengue_post/dengue_features_train.csv\u0026#39;)\rtrain_labels \u0026lt;- read.csv(\u0026#39;data/dengue_post/dengue_labels_train.csv\u0026#39;)\rtest_features \u0026lt;- read.csv(\u0026#39;data/dengue_post/dengue_features_test.csv\u0026#39;)\rsubmission_format \u0026lt;- read.csv(\u0026#39;data/dengue_post/submission_format.csv\u0026#39;)\r# Filter of data by city sj_train_labels \u0026lt;- filter(train_labels, city == \u0026#39;sj\u0026#39;)\rsj_train_features \u0026lt;- filter(train_features, city == \u0026#39;sj\u0026#39;)\riq_train_labels \u0026lt;- filter(train_labels, city == \u0026#39;iq\u0026#39;)\riq_train_features \u0026lt;- filter(train_features, city == \u0026#39;iq\u0026#39;)\r# Is there NA values?\rdf_na_sj \u0026lt;- as.data.frame(apply(sj_train_features,2, function(x) any(is.na(x))))\rcolnames(df_na_sj) \u0026lt;- \u0026#39;is_there_NA\u0026#39;\rdf_na_sj$number_NA \u0026lt;- apply(sj_train_features,2, function(x) sum(is.na(x)))\rdf_na_sj$mean_NA \u0026lt;- apply(sj_train_features, 2, function(x) mean(is.na(x)))\rdf_na_iq \u0026lt;- as.data.frame(apply(iq_train_features, 2, function(x) any(is.na(x))))\rcolnames(df_na_iq) \u0026lt;- \u0026#39;is_there_NA\u0026#39;\rdf_na_iq$number_NA \u0026lt;- apply(iq_train_features, 2, function(x) sum(is.na(x)))\rdf_na_iq$mean_NA \u0026lt;- apply(iq_train_features, 2, function(x) mean(is.na(x)))\r# Vegetation Index over Time Plot with NAs\rggplot(sj_train_features, aes(x = as.Date(week_start_date), y = ndvi_ne )) +\rggtitle(\u0026#39;Vegetation Index over Time\u0026#39;) +\rtheme_bw() +\rxlab(\u0026#39;Title\u0026#39;) +\rgeom_line(na.rm = FALSE, color = \u0026#39;blue\u0026#39;) +\rtheme(plot.title = element_text(hjust = 0.5))\r# Remove \u0026#39;weekofyear\u0026#39; column\rsj_train_features \u0026lt;- dplyr::select(sj_train_features, -week_start_date)\riq_train_features \u0026lt;- dplyr::select(iq_train_features, -week_start_date)\r# Fill the NA values with the previous value\rsj_train_features \u0026lt;- sj_train_features %\u0026gt;%\rdo(na.locf(.))\riq_train_features \u0026lt;- iq_train_features %\u0026gt;%\rdo(na.locf(.))\r# Distribution of labels\r# print(mean(sj_train_labels$total_cases))\r# print(var(sj_train_labels$total_cases))\r# # print(mean(iq_train_labels$total_cases))\r# print(var(iq_train_labels$total_cases))\rggplot(sj_train_labels, aes(x = total_cases)) +\rtheme_bw() +\rggtitle(\u0026#39;Cases of dengue in San Juan\u0026#39;) +\rgeom_histogram() +\rtheme(plot.title = element_text(hjust = 0.5))\rggplot(iq_train_labels, aes(x = total_cases)) +\rtheme_bw() +\rggtitle(\u0026#39;Cases of dengue in Iquitos\u0026#39;) +\rgeom_histogram() +\rtheme(plot.title = element_text(hjust = 0.5))\r# Add total_cases column to *_train_features dataframes\r# sj_train_features \u0026lt;- left_join(sj_train_features, sj_train_labels, by = c(\u0026#39;city\u0026#39;, \u0026#39;year\u0026#39;, \u0026#39;weekofyear\u0026#39;))\rsj_train_features$total_cases \u0026lt;- sj_train_labels$total_cases\r# iq_train_features \u0026lt;- left_join(iq_train_features, iq_train_labels, by = c(\u0026#39;city\u0026#39;, \u0026#39;year\u0026#39;, \u0026#39;weekofyear\u0026#39;))\riq_train_features$total_cases \u0026lt;- iq_train_labels$total_cases\r# Correlation matrix\rm_sj_train_features \u0026lt;- data.matrix(sj_train_features)\rm_sj_train_features \u0026lt;- cor(x = m_sj_train_features[,3:24], use = \u0026#39;complete.obs\u0026#39;, method = \u0026#39;pearson\u0026#39;)\rm_iq_train_features \u0026lt;- data.matrix(iq_train_features)\rm_iq_train_features \u0026lt;- cor(x = m_iq_train_features[,3:24], use = \u0026#39;everything\u0026#39;, method = \u0026#39;pearson\u0026#39;)\r# Correlation Heatmap\rcorrplot(m_sj_train_features, type = \u0026#39;full\u0026#39;, tl.col = \u0026#39;black\u0026#39;, method=\u0026quot;shade\u0026quot;)\rcorrplot(m_iq_train_features, type = \u0026#39;full\u0026#39;, tl.col = \u0026#39;black\u0026#39;, method = \u0026#39;shade\u0026#39;)\r# Correlation Bar plot\rdf_sj_train_features \u0026lt;- data.frame(m_sj_train_features)[2:21,] df_sj_train_features \u0026lt;- dplyr::select(df_sj_train_features, total_cases) df_iq_train_features \u0026lt;- data.frame(m_iq_train_features)[2:21,]\rdf_iq_train_features \u0026lt;- dplyr::select(df_iq_train_features, total_cases) ggplot(df_sj_train_features, aes(x= reorder(rownames(df_sj_train_features), -total_cases), y = total_cases)) +\rgeom_bar(stat = \u0026#39;identity\u0026#39;) +\rtheme_bw() +\rggtitle(\u0026#39;Correlation of variables in San Juan\u0026#39;) +\rylab(\u0026#39;Correlation\u0026#39;) +\rxlab(\u0026#39;Variables\u0026#39;) +\rcoord_flip()\rggplot(df_iq_train_features, aes(x= reorder(rownames(df_sj_train_features), -total_cases), y = total_cases)) +\rgeom_bar(stat = \u0026#39;identity\u0026#39;) +\rtheme_bw() +\rggtitle(\u0026#39;Correlation of variables in Iquitos\u0026#39;) +\rylab(\u0026#39;Correlation\u0026#39;) +\rxlab(\u0026#39;Variables\u0026#39;) +\rcoord_flip()\r# Function data cleaning\rdata_clean \u0026lt;- function(df_dengue_features, df_dengue_labels = NULL, add_cases = TRUE) {\r# Filter by city\rsj_df_dengue_features \u0026lt;- filter(df_dengue_features, city == \u0026#39;sj\u0026#39;)\riq_df_dengue_features \u0026lt;- filter(df_dengue_features, city == \u0026#39;iq\u0026#39;)\rif (add_cases == TRUE) {\rsj_df_dengue_labels \u0026lt;- filter(df_dengue_labels, city == \u0026#39;sj\u0026#39;)\riq_df_dengue_labels \u0026lt;- filter(df_dengue_labels, city == \u0026#39;iq\u0026#39;)\r}\r# Removing week_start_date column\rsj_df_dengue_features \u0026lt;- dplyr::select(sj_df_dengue_features, -week_start_date)\riq_df_dengue_features \u0026lt;- dplyr::select(iq_df_dengue_features, -week_start_date)\r# Fill of NA values with the previous value\rsj_df_dengue_features \u0026lt;- sj_df_dengue_features %\u0026gt;%\rdo(na.locf(.))\riq_df_dengue_features \u0026lt;- iq_df_dengue_features %\u0026gt;%\rdo(na.locf(.))\r# Add total_cases to dataframe with features\rif (add_cases == TRUE) {\rsj_df_dengue_features$total_cases \u0026lt;- sj_df_dengue_labels$total_cases\riq_df_dengue_features$total_cases \u0026lt;- iq_df_dengue_labels$total_cases\r}\r# Converting character columns into numbers\rsj_df_dengue_features \u0026lt;- as.data.frame(apply(sj_df_dengue_features,2,as.numeric))\rsj_df_dengue_features$city \u0026lt;- rep(\u0026#39;sj\u0026#39;, nrow(sj_df_dengue_features))\riq_df_dengue_features \u0026lt;- as.data.frame(apply(iq_df_dengue_features,2,as.numeric))\riq_df_dengue_features$city \u0026lt;- rep(\u0026#39;iq\u0026#39;, nrow(iq_df_dengue_features))\rresult \u0026lt;- list(sj_df_dengue_features, iq_df_dengue_features )\rreturn(result)\r}\r# Getting data_training clean\rdata_train \u0026lt;- data_clean(train_features, train_labels, TRUE)\r# Getting negative binomials models by city\rtraining_sj \u0026lt;- glm.nb(formula = total_cases ~ reanalysis_specific_humidity_g_per_kg +\rreanalysis_dew_point_temp_k +\rstation_min_temp_c +\rstation_avg_temp_c, data = data_train[[1]])\rtraining_iq \u0026lt;- glm.nb(formula = total_cases ~ reanalysis_specific_humidity_g_per_kg +\rreanalysis_dew_point_temp_k +\rstation_min_temp_c +\rstation_avg_temp_c, data = data_train[[2]])\r# Getting data_test clean\rdata_test \u0026lt;- data_clean(test_features, add_cases = FALSE)\r# Testing model with training data\rprediction_train_sj \u0026lt;- predict(training_sj, data_train[[1]], type = \u0026#39;response\u0026#39;)\rprediction_train_iq \u0026lt;- predict(training_iq, data_train[[2]], type = \u0026#39;response\u0026#39;)\rdf_prediction_train_sj \u0026lt;- data.frame(\u0026#39;prediction\u0026#39; = prediction_train_sj, \u0026#39;actual\u0026#39; = data_train[[1]]$total_cases,\r\u0026#39;time\u0026#39; = as.Date(train_features$week_start_date[1:936]))\rdf_prediction_train_sj \u0026lt;- melt(df_prediction_train_sj, id.vars = \u0026#39;time\u0026#39;)\rggplot(df_prediction_train_sj, aes(x = time, y = value, color = variable)) +\rgeom_line() +\rggtitle(\u0026#39;Dengue predicted Cases vs. Actual Cases (City-San Juan) \u0026#39;)\rdf_prediction_train_iq \u0026lt;- data.frame(\u0026#39;prediction\u0026#39; = prediction_train_iq, \u0026#39;actual\u0026#39; = data_train[[2]]$total_cases,\r\u0026#39;time\u0026#39; = as.Date(train_features$week_start_date[937:1456]))\rdf_prediction_train_iq \u0026lt;- melt(df_prediction_train_iq, id.vars = \u0026#39;time\u0026#39;)\rggplot(df_prediction_train_iq, aes(x = time, y = value, color = variable)) +\rgeom_line() +\rggtitle(\u0026#39;Dengue predicted Cases vs. Actual Cases (City-Iquitos) \u0026#39;)\r# Prediction of total_cases in the data set\rprediction_sj \u0026lt;- predict(training_sj, data_test[[1]], type = \u0026#39;response\u0026#39;)\rprediction_iq \u0026lt;- predict(training_iq, data_test[[2]], type = \u0026#39;response\u0026#39;)\rdata_prediction_sj \u0026lt;- data.frame(\u0026#39;city\u0026#39; = rep(\u0026#39;sj\u0026#39;, length(prediction_sj) ), \u0026#39;total_cases\u0026#39; = prediction_sj, \u0026#39;weekofyear\u0026#39; = data_test[[1]]$weekofyear,\r\u0026#39;year\u0026#39; = data_test[[1]]$year )\rdata_prediction_iq \u0026lt;- data.frame(\u0026#39;city\u0026#39; = rep(\u0026#39;iq\u0026#39;, length(prediction_iq) ), \u0026#39;total_cases\u0026#39; = prediction_iq,\r\u0026#39;weekofyear\u0026#39; = data_test[[2]]$weekofyear,\r\u0026#39;year\u0026#39; = data_test[[2]]$year)\rsubmission_format$total_cases \u0026lt;- as.numeric(c(data_prediction_sj$total_cases, data_prediction_iq$total_cases))\rsubmission_format$total_cases \u0026lt;- round(submission_format$total_cases, 0)\rwrite.csv(submission_format,\rfile = \u0026#39;submission_format_submit.csv\u0026#39;, row.names = F)\r","date":1512777600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512777600,"objectID":"bc9a72a1bd22065d7459b586981c9f1f","permalink":"/post/can-we-predict-cases-of-dengue-with-climate-variables/","publishdate":"2017-12-09T00:00:00Z","relpermalink":"/post/can-we-predict-cases-of-dengue-with-climate-variables/","section":"post","summary":"Recently, I discovered a new website about competitions that it is not called Kaggle! Its name is Drivendata.\nDrivenData offers different competitions related with multiple types of field, such as health (oh yes!","tags":[],"title":"Can we predict cases of dengue with climate variables?","type":"post"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"1f29febbc615242dc40f5d0944052f46","permalink":"/project/drugsplot/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/drugsplot/","section":"project","summary":"Web application which analyzes data from the European MonitoringC entre for Drugs and Drug Addiction (EMCDDA) with more than 500 variables throughdata visualization such as interactive boxplots, shapefile maps and automated reports. Developed with R and Shiny.","tags":["Dashboard"],"title":"Drugsplot","type":"project"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"c79ceba036d1c4f0610e75b12b8d88e3","permalink":"/project/healthplot/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/healthplot/","section":"project","summary":"Dashboard of 40 individual datasets and more than 50 graph-ics divided into 13 categories (health, religion, politics, genre, security, ancestry, immi-gration, demography, economic, logistic, languages and population) that reflect someaspects of the North American public health..","tags":["Dashboard"],"title":"HealthPlot","type":"project"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d13ed60d515a3141459ea2701b1b057a","permalink":"/project/rsciencexplorer/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/rsciencexplorer/","section":"project","summary":"This application analyzes more than 12.000 articles and 22.000 tweets obtained through relevant scientific journals (and their twitter accounts). This app was built with R and Shiny.","tags":["Dashboard"],"title":"Rsciencexplorer","type":"project"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"df68cfcbce1f8727c33153dcb212717b","permalink":"/project/sciencenet/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/sciencenet/","section":"project","summary":"Query a PMID publication and retrieve information such as cites network, centrality measure by article...Project using API to the NCBI database.","tags":["Dashboard"],"title":"ScienceNet","type":"project"},{"authors":["__Francisco Requena__, Helena G Asenjo et al."],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    #  Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.    Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/).\r--  ","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"NOMePlot - analysis of DNA methylation and nucleosome occupancy at the single molecule","type":"publication"}]